@using PagedList.Mvc;

@model IEnumerable<MyBookkeeping.Models.Bookkeeping>

@{ 
    Layout = null;
    var LineNumber = 0;

    if (ViewData["LineIndex"] != null)
    {
        LineNumber = int.Parse(ViewData["LineIndex"].ToString());
    }
}


<table class="table table-bordered table-hover">
    <tr>
        <th>
            #
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Type)

        </th>
        <th>
            @Html.DisplayNameFor(model => model.Date)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Amount)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @(++LineNumber)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Type)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Date)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Amount)
            </td>

            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.Id })
            </td>
        </tr>
    }

</table>

<div style="color:orange;">
    @{ 
        var list = (PagedList.IPagedList)Model; 
    }
    Page @(list.PageCount < list.PageNumber ? 0 : list.PageNumber) of @list.PageCount
</div>
@Html.PagedListPager(list, page => Url.Action("AddRecord", new { page }))
















